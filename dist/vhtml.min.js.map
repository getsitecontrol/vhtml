{"version":3,"sources":["../src/vhtml.js","../src/empty-tags.js"],"names":["h","name","attrs","stack","i","arguments","length","push","children","reverse","s","options","normalizeNode","attrName","DOMAttributeNames","normalizeAttr","escape","attrValue","normalizeAttrValue","emptyTags","indexOf","child","pop","sanitized","noEscape","map","&","<",">","\"","'","str","String","replace","attr","toLowerCase","value","node"],"mappings":"uLA+BA,SAAgBA,GAAEC,EAAMC,OAElB,GADDC,MACKC,EAAEC,UAAUC,OAAQF,KAAM,KAC5BG,KAAKF,UAAUD,OAIJ,kBAAPH,UACTC,IAAUA,OAAaM,SAAWL,EAAMM,UAClCR,EAAKC,MAITQ,GAAAA,IAAQC,EAAQC,cAAcX,MAC9BC,EAAO,IAAK,GAAIE,KAAKF,OACT,IAAXA,EAAME,IAAwB,MAAVF,EAAME,GAAU,IACjCS,GAAWF,EAAQG,kBAAkBV,GAAKO,EAAQI,cAAcJ,EAAQG,kBAAkBV,IAAMO,EAAQK,OAAOL,EAAQI,cAAcX,IACrIa,EAAYN,EAAQK,OAAOL,EAAQO,mBAAmBL,EAASX,EAAME,IACvES,IAAYI,WACNJ,EAAT,KAAsBI,EAAtB,SAK8B,IAA7BE,EAAUC,QAAQnB,GAAc,QAC9B,IAEEE,EAAMG,QAAQ,IAChBe,GAAQlB,EAAMmB,SACdD,KACCA,EAAMC,QACJ,GAAIlB,GAAEiB,EAAMf,OAAQF,OAAaG,KAAKc,EAAMjB,aAGzB,IAAnBmB,EAAUF,KAAqD,IAApCV,EAAQa,SAASJ,QAAQnB,GAAeoB,EAAQV,EAAQK,OAAOK,WAKxFV,EAAQC,cAAcX,GAAhC,YAEK,aAGIS,IAAK,EACRA,EC5ER,GAAAS,IACC,OACA,OACA,KACA,MACA,UACA,QACA,KACA,MACA,QACA,SACA,OACA,OACA,QACA,SACA,QACA,ODbKM,GAAOC,IAAI,MAAMC,IAAI,KAAKC,IAAI,KAAKC,IAAI,OAAOC,IAAI,QACpDP,KAESZ,aAEX,QACA,6BAHqB,SAMfoB,SACCC,QAAOD,GAAKE,QAAQ,WAAY,SAAAvB,aAAOe,EAAIf,GAAX,qBAPlB,SASPwB,SACPA,GAAKC,kCAVS,SAYFD,EAAKE,SACjBA,kBAbc,SAePC,SACPA,GAAKF,4CAGD,gBACF","file":"vhtml.min.js","sourcesContent":["import emptyTags from './empty-tags';\n\n// escape an attribute\nconst map = {'&':'amp','<':'lt','>':'gt','\"':'quot',\"'\":'apos'};\nlet sanitized = {};\n\nexport const options = {\n\tnoEscape:[\n\t\t'style',\n\t\t'script'\n\t],\n\temptyTags,\n\tescape(str) {\n\t\treturn String(str).replace(/[&<>\"']/g, s=>`&${map[s]};`);\n\t},\n\tnormalizeAttr (attr) {\n\t\treturn attr.toLowerCase();\n\t},\n\tnormalizeAttrValue (attr,value) {\n\t\treturn value;\n\t},\n\tnormalizeNode (node) {\n\t\treturn node.toLowerCase();\n\t},\n\tDOMAttributeNames: {\n\t\tclassName: 'class',\n\t\thtmlFor: 'for'\n\t}\n};\n\n/** Hyperscript reviver that constructs a sanitized HTML string. */\nexport function h(name, attrs) {\n\tlet stack=[];\n\tfor (let i=arguments.length; i-- > 2; ) {\n\t\tstack.push(arguments[i]);\n\t}\n\n\t// Sortof component support!\n\tif (typeof name==='function') {\n\t\t(attrs || (attrs = {})).children = stack.reverse();\n\t\treturn name(attrs);\n\t\t// return name(attrs, stack.reverse());\n\t}\n\n\tlet s = `<${options.normalizeNode(name)}`;\n\tif (attrs) for (let i in attrs) {\n\t\tif (attrs[i]!==false && attrs[i]!=null) {\n\t\t\tconst attrName = options.DOMAttributeNames[i] ? options.normalizeAttr(options.DOMAttributeNames[i]) : options.escape(options.normalizeAttr(i));\n\t\t\tconst attrValue = options.escape(options.normalizeAttrValue(attrName,attrs[i]));\n\t\t\tif (attrName && attrValue){\n\t\t\t\ts += ` ${attrName}=\"${attrValue}\"`;\n\t\t\t}\n\t\t}\n\t}\n\n\tif (emptyTags.indexOf(name) === -1) {\n\t\ts += '>';\n\n\t\twhile (stack.length) {\n\t\t\tlet child = stack.pop();\n\t\t\tif (child) {\n\t\t\t\tif (child.pop) {\n\t\t\t\t\tfor (let i=child.length; i--; ) stack.push(child[i]);\n\t\t\t\t}\n\t\t\t\telse {\n\t\t\t\t\ts += sanitized[child]===true || options.noEscape.indexOf(name) !== -1 ? child : options.escape(child);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\ts += `</${options.normalizeNode(name)}>`;\n\t} else {\n\t\ts += '>';\n\t}\n\n\tsanitized[s] = true;\n\treturn s;\n}\n","export default [\n\t'area',\n\t'base',\n\t'br',\n\t'col',\n\t'command',\n\t'embed',\n\t'hr',\n\t'img',\n\t'input',\n\t'keygen',\n\t'link',\n\t'meta',\n\t'param',\n\t'source',\n\t'track',\n\t'wbr'\n];"]}